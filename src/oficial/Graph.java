/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oficial;

/**
 *
 * @author guilherme
 */

import com.mxgraph.model.mxGraphModel;
import static javax.swing.JOptionPane.showMessageDialog;
import com.mxgraph.swing.mxGraphComponent;
import com.mxgraph.view.mxGraph;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;


public class Graph extends javax.swing.JFrame {

    /**
     * Creates new form Graph
     */
    
    List<Double> xs = new ArrayList<Double>();
    List<Double> ys = new ArrayList<Double>();
    List<Vertice> caminho = new ArrayList<Vertice>();
    List<Vertice> vertices = new ArrayList<Vertice>();
    
    Grafo ufu;
    
    mxGraph graph = new mxGraph();
    Object parent = graph.getDefaultParent();
    
    
    public Graph() {
        initComponents();
        ufu = new Grafo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCaminho = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        txtOrigem = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBusca = new javax.swing.JButton();
        btnReiniciar = new javax.swing.JButton();
        GraphResult = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtOrigem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrigemActionPerformed(evt);
            }
        });

        jLabel1.setText("Destino");

        jLabel2.setText("Origem");

        btnBusca.setText("Busca");
        btnBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaActionPerformed(evt);
            }
        });

        btnReiniciar.setText("Reiniciar");
        btnReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReiniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GraphResultLayout = new javax.swing.GroupLayout(GraphResult);
        GraphResult.setLayout(GraphResultLayout);
        GraphResultLayout.setHorizontalGroup(
            GraphResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );
        GraphResultLayout.setVerticalGroup(
            GraphResultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnBusca, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addComponent(txtDestino, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnReiniciar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(71, 71, 71)
                .addComponent(GraphResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBusca)
                .addGap(36, 36, 36)
                .addComponent(txtCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnReiniciar)
                .addContainerGap(61, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GraphResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaActionPerformed
        // TODO add your handling code here:
        
        //GraphResult.add(this);
        
        ufu.addVertice("1U");
        addVerticeGraph("1U");
        ufu.addVertice("1N");
        addVerticeGraph("1N");
        ufu.addVertice("5R");
        addVerticeGraph("5R");
        ufu.addVertice("1C");
        addVerticeGraph("1C");
        ufu.addVertice("1G");
        addVerticeGraph("1G");
        ufu.addVertice("3Q");
        addVerticeGraph("3Q");
        ufu.addVertice("3M");
        addVerticeGraph("3M");
        ufu.addVertice("1E");
        addVerticeGraph("1E");
        
        ufu.addAresta("1U","1N",35);
        ufu.addAresta("1N","1U",35);
        addArestaGraph("1U","1N",35);
        
        ufu.addAresta("1U","5R",15);
        ufu.addAresta("5R","1U",15);
        addArestaGraph("1U","5R",15);
        
        ufu.addAresta("5R","1C",15);
        ufu.addAresta("1C","5R",15);
        addArestaGraph("5R","1C",15);
        
        ufu.addAresta("5R","1N",15);
        ufu.addAresta("1N","5R",15);
        addArestaGraph("5R","1N",15);
        
        ufu.addAresta("5R","1G",80);
        ufu.addAresta("1G","5R",80);
        addArestaGraph("5R","1G",80);
        
        ufu.addAresta("1E","1N",50);
        ufu.addAresta("1N","1E",50);
        addArestaGraph("1E","1N",50);
        
        ufu.addAresta("1E","3M",25);
        ufu.addAresta("3M","1E",25);
        addArestaGraph("1E","3M",25);
        
        ufu.addAresta("1E","3Q",98);
        ufu.addAresta("3Q","1E",98);
        addArestaGraph("1E","3Q",98);
        
        ufu.addAresta("3Q","1G",39);
        ufu.addAresta("1G","3Q",39);
        addArestaGraph("3Q","1G",39);
        
        ufu.addAresta("3M","1C",15);
        ufu.addAresta("1C","3M",15);
        addArestaGraph("3M","1C",15);
        
        ufu.addAresta("3M","1N",35);
        ufu.addAresta("1N","3M",35);
        addArestaGraph("3M","1N",35);
        
        ufu.addAresta("3M","3Q",35);
        ufu.addAresta("3Q","3M",35);
        addArestaGraph("3M","3Q",35);
        
        Dijkstra x = new Dijkstra();
        caminho = x.encontrarMenorCaminhoDijkstra(ufu, 
                txtOrigem.getText(), txtDestino.getText());
        
        graph.getModel().beginUpdate();
        vertices = ufu.getVertices();
        String id;
        for(int i=0; i < vertices.size();i++)
            {
                id = vertices.get(i).getId();
                Object v = ((mxGraphModel)(graph.getModel())).getCell(id);
                ((mxGraphModel)(graph.getModel())).setStyle(v,"defaultVertex;fillColor=green;fontSize=16;fontColor=black");
            }
        graph.getModel().endUpdate();
            mxGraphComponent graphComponent = new mxGraphComponent(graph);
            GraphResult.removeAll();
            GraphResult.add(graphComponent);
            GraphResult.revalidate();
            GraphResult.repaint();
            graph.getModel().beginUpdate();
        
            txtOrigem.setText("");
            txtDestino.setText("");
            
            String aux, aux2 = "";
            for(int i = 0; i < caminho.size(); i++)
            {
                if(i>0)
                    aux2 += " ---> ";
                aux2 += caminho.get(i).getId();
                aux = caminho.get(i).getId();
                Object v = ((mxGraphModel)(graph.getModel())).getCell(aux);
                ((mxGraphModel)(graph.getModel())).setStyle(v,"defaultVertex;fillColor=red;fontSize=16;fontColor=black");
            }
            //aux2 += "\nDistância: " + x.getDist();
            //txtGrafo.setText(aux2);
            graph.getModel().endUpdate();
            graphComponent = new mxGraphComponent(graph);
            GraphResult.removeAll();
            GraphResult.add(graphComponent);
            GraphResult.revalidate();
            GraphResult.repaint();
        String temp = "";
        for (int i = 0; i < caminho.size(); i++) 
        {
            
            
            if(i>0){
                txtCaminho.setText(temp + " -> " + caminho.get(i).getId());
                temp = temp + " -> " + caminho.get(i).getId();
            }
            else{
                txtCaminho.setText(caminho.get(i).getId());
                temp = caminho.get(i).getId();
            }
        }
    
    }//GEN-LAST:event_btnBuscaActionPerformed

    private void txtOrigemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrigemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrigemActionPerformed

    private void btnReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReiniciarActionPerformed
        // TODO add your handling code here:
        txtDestino.setText("");
        txtOrigem.setText("");
        txtCaminho.setText("");
        graph.removeCells(graph.getChildVertices(graph.getDefaultParent()));
        GraphResult.removeAll();
        GraphResult.revalidate();
        GraphResult.repaint();
        
    }//GEN-LAST:event_btnReiniciarActionPerformed

    public void addArestaGraph(String vv1, String vv2, int peso){
        Object v1 = ((mxGraphModel)(graph.getModel())).getCell(vv1);
        Object v2 = ((mxGraphModel)(graph.getModel())).getCell(vv2);
        graph.insertEdge(parent, "1U"+" "+"1N", peso, 
                v1, v2,"fontSize=16;fontColor=black;strokeWidth=2;labelBackgroundColor=#ffffff;endArrow=none");
    }
    
    public void addVerticeGraph(String id){
        graph.getModel().beginUpdate();
        Random A = new Random();
        //jtf_id.setText("");
        Random Aleatorio = new Random();
        double x = Aleatorio.nextInt(700);
        double y = Aleatorio.nextInt(490);
        xs.add(1.0);
        ys.add(1.0);
        for(int i = 0; i < xs.size(); i++)
        {
            if(x == xs.get(i))
            {
                x = Aleatorio.nextInt(700);
                i=0;
            }
        }
        xs.add(x);
        for(int i = 0; i < ys.size(); i++)
        {
            if(y == ys.get(i))
            {
                y = Aleatorio.nextInt(490);
                i=0;
            }
        }
        ys.add(y);
        graph.insertVertex(parent, id, id, x, y, 80,30,"fontColor=black;fillColor=green;");
        graph.getModel().endUpdate();
        mxGraphComponent graphComponent = new mxGraphComponent(graph);
        GraphResult.removeAll();
        GraphResult.add(graphComponent);
        GraphResult.revalidate();
        GraphResult.repaint(); 
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graph().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GraphResult;
    private javax.swing.JButton btnBusca;
    private javax.swing.JButton btnReiniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtCaminho;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtOrigem;
    // End of variables declaration//GEN-END:variables
}
